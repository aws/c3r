# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Run Gradle Build
on:
  schedule:
    - cron: '0 6 * * *' # Run daily @ 6AM UTC/2AM EST
  pull_request:
  push:
    branches: [ main ]

permissions:
  actions: read
  contents: read

jobs:
  gradle:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java-version: [ '11', '17' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up repository
        uses: actions/checkout@v5
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'corretto'
      - name: Set up Hadoop repository
        if: startsWith(matrix.os, 'windows')
        uses: actions/checkout@v5
        with:
          repository: 'kontext-tech/winutils'
          path: 'hadoop'
      - name: Set up Hadoop env
        if: startsWith(matrix.os, 'windows')
        run: |
          echo "HADOOP_HOME=${{ github.workspace }}\hadoop\hadoop-3.3.1" >> $env:GITHUB_ENV;
          echo "${{ github.workspace }}\hadoop\hadoop-3.3.1\bin" >> $env:GITHUB_PATH;
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Run Gradle build
        run: ./gradlew build --parallel

  # Here we wait on all builds and then check if any included "failure"
  # in the result. This should mean `gradle-no-failures` is successful
  # if and only if all builds either succeed or are skipped (e.g., due to
  # the `skip-duplicate-actions` action).
  gradle-no-failures:
    runs-on: ubuntu-latest
    needs: gradle
    if: always()
    steps:
      - name: All builds ok
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Some builds failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
