// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

package com.amazonaws.c3r.config;

// Defines a common set of tests all schema types should implement.
public interface TableSchemaCommonTestInterface {
    // Verify that headers are correctly autogenerated as needed.
    void verifyAutomaticHeaderConstructionTest();

    // Verify one source column can be mapped to multiple output columns as long as they have unique target header names.
    void oneSourceToManyTargetsTest();

    // Verify that is the same target header name is used more than once in a schema, it fails validation.
    void repeatedTargetFailsTest();

    // Validate that the column is null the schema is not accepted.
    void validateNullColumnValueIsRejectedTest();

    // Validate that if the output column list is empty, the schema is not accepted.
    void validateEmptyColumnValueIsRejectedTest();

    // Test the implementation of equals and hash to make sure results are as expected.
    void equalsAndHashTest();

    // Verify the header row can't be the wrong value and the schema will still work.
    void verifyHeaderRowValueTest();

    // Check the results from {@code getColumns()} matches the ones used in the schema and not the ones in the file.
    void verifyColumnsInResultsTest();

    // Check that {@code getColumns()} returns properly validated columns.
    void verifyGetColumnsTest() throws IllegalAccessException, NoSuchFieldException;

    // Make sure the various states of unspecified headers are correct for the child implementation.
    void verifyGetUnspecifiedHeadersReturnValueTest() throws IllegalAccessException, NoSuchFieldException;

    // Make sure child implementation rejects all invalid headers for its type.
    void verifyChildSpecificInvalidHeaderConstructionTest();

    // Check the child specific {@code verification} function to be sure it works as expected.
    void checkClassSpecificVerificationTest() throws IllegalAccessException, NoSuchFieldException;
}
